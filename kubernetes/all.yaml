apiVersion: v1
kind: Namespace
metadata:
  name: pks-labeling
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pks-labeling-service-account
  namespace: pks-labeling
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pks-labeling-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - "pods"
  verbs:
  - "get"
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - "patch"
  - "get"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pks-labeling-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pks-labeling-cluster-role
subjects:
- kind: ServiceAccount
  name: pks-labeling-service-account
  namespace: pks-labeling
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: pks-labeling-ds
  namespace: pks-labeling
  labels:
    app: pks-labeling
spec:
  selector:
    matchLabels:
      name: pks-labeling-app
  template:
    metadata:
      labels:
        name: pks-labeling-app
    spec:
      serviceAccountName: pks-labeling-service-account
      containers:
      - name: labeling-pod
        image: yanivno/pks-labeling:1.5 
        resources:
          requests:
            memory: "4Mi"
            cpu: "100m"
          limits:
            memory: "32Mi"
            cpu: "100m"
        env:
        - name: LABELNAME
          value: "app"
        - name: LABELVALUE
          value: "standard"
        command: [ "/bin/sh", "-c", "./label-node.sh" ]
      restartPolicy: Always


